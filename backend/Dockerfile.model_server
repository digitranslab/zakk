FROM python:3.11.7-slim-bookworm

LABEL com.zakk.maintainer="founders@digi-trans.org"
LABEL com.zakk.description="This image is for the Zakk model server which runs all of the \
AI models for Zakk. This container and all the code is MIT Licensed and free for all to use. \
You can find it at https://hub.docker.com/r/zakk/zakk-model-server. For more details, \
visit https://github.com/digitranslab/zakk."

# Default ZAKK_VERSION, typically overriden during builds by GitHub Actions.
ARG ZAKK_VERSION=0.0.0-dev
ENV ZAKK_VERSION=${ZAKK_VERSION} \
    ZAKK_RUNNING_IN_DOCKER="true"

RUN echo "ZAKK_VERSION: ${ZAKK_VERSION}"

# Install only essential packages and clean up immediately
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        gcc \
        g++ \
        && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Use CPU-only requirements to dramatically reduce package sizes
COPY ./requirements/model_server_cpu.txt /tmp/requirements.txt

# Install packages in stages to manage disk space
RUN pip install --no-cache-dir --upgrade pip && \
    # Install base packages first
    pip install --no-cache-dir \
        --retries 3 \
        --timeout 60 \
        numpy==1.26.4 \
        packaging \
        pyyaml && \
    # Clean immediately after base install
    rm -rf ~/.cache/pip /tmp/pip-* && \
    # Install PyTorch CPU-only (much smaller than GPU version)
    pip install --no-cache-dir \
        --index-url https://download.pytorch.org/whl/cpu \
        --retries 3 \
        --timeout 120 \
        torch==2.6.0+cpu && \
    # Clean immediately after torch
    rm -rf ~/.cache/pip /tmp/pip-* && \
    # Install remaining requirements
    pip install --no-cache-dir \
        --retries 3 \
        --timeout 60 \
        -r /tmp/requirements.txt && \
    # Final cleanup
    rm -rf ~/.cache/pip /tmp/pip-* /tmp/requirements.txt

# Aggressive cleanup of unnecessary packages
RUN apt-get remove -y --allow-remove-essential \
        perl-base \
        man-db \
        manpages \
        info \
        wget \
        curl && \
    apt-get autoremove -y --purge && \
    apt-get clean && \
    rm -rf \
        /var/lib/apt/lists/* \
        /var/cache/apt/archives/* \
        /usr/share/man/* \
        /usr/share/doc/* \
        /usr/share/locale/* \
        /tmp/* \
        /var/tmp/*

# Copy the model download script
COPY ./download_models.py /tmp/download_models.py

# Pre-downloading models for setups with limited egress
# Download tokenizers and models using the script
RUN python /tmp/download_models.py && \
    # Clean up the script after use
    rm /tmp/download_models.py

# In case the user has volumes mounted to /root/.cache/huggingface that they've downloaded while
# running Zakk, don't overwrite it with the built in cache folder
RUN mv /root/.cache/huggingface /root/.cache/temp_huggingface

WORKDIR /app

# Utils used by model server
COPY ./zakk/utils/logger.py /app/zakk/utils/logger.py
COPY ./zakk/utils/middleware.py /app/zakk/utils/middleware.py

# Place to fetch version information
COPY ./zakk/__init__.py /app/zakk/__init__.py

# Shared between Zakk Backend and Model Server
COPY ./shared_configs /app/shared_configs

# Model Server main code
COPY ./model_server /app/model_server

ENV PYTHONPATH=/app

CMD ["uvicorn", "model_server.main:app", "--host", "0.0.0.0", "--port", "9000"]
